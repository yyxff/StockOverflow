version: '3.8'

services:
  # Go
  app:
    build: 
      context: . 
      dockerfile: Dockerfile
    ports:
      - "12345:12345"  
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=stockoverflow
    depends_on:
      db:  
        condition: service_healthy 
    networks:
      - mynetwork
    cpuset: "${CPUSET_APP:-0,1,2,3}"
    # cpus: '1.0'

  # PostgreSQL
  db:
    image: postgres:15-alpine 
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stockoverflow
    # volumes:
    #   - postgres_data:/var/lib/postgresql/data 
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql 
    ports:
      - "7777:5432"  # expose port
    networks:
      - mynetwork
    healthcheck:  # health check
      test: ["CMD-SHELL", "pg_isready -U postgres -d stockoverflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    cpuset: "${CPUSET_APP:-0,1,2,3}"



  # Locust load testing
  locust-master:
    build: ./swarm
    ports:
      - "8089:8089"    # Web UI port
    command: --master --host app  # tested host（app）
    depends_on:
      db:  
        condition: service_healthy 
    networks:
      - mynetwork
    cpuset: "${CPUSET_LOCUST:-4,5,6,7}"



  locust-worker:
    build: ./swarm
    command: --worker --master-host locust-master
    depends_on:
      db:  
        condition: service_healthy 
    scale: 4  
    networks:
      - mynetwork
    cpuset: "${CPUSET_LOCUST:-4,5,6,7}"



volumes:
  postgres_data:

networks:
  mynetwork:  # network in containers